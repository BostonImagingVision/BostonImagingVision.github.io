#!/usr/bin/env python

# This script takes a source file (../data/companies.json)
# and produces a corresponding GeoJSON file (../data/geo_companies.geojson)
#
# Before running this script, you will probably need to install the geocoder module. Try this:
# $ pip install geocoder
#
# Usage:
# $ ./build_geo.py
#

import os
import json

try:
    import geocoder
except:
    raise Exception("Can't find geocoder module. Try 'pip install geocoder'")


DATA_DIR = os.path.join('..', 'data')
SOURCE = 'companies.json'
OUTPUT = 'geo_companies.geojson'

def main():
    src_path = os.path.normpath(os.path.join(DATA_DIR, SOURCE))
    out_path = os.path.normpath(os.path.join(DATA_DIR, OUTPUT))
    companies = json.load(open(src_path))
    with open(out_path, 'w') as out_file:
        geo = list_to_geojson(companies)
        json.dump(geo, out_file, indent=2)

def list_to_geojson(companies):
    items = [i for i in [to_geojson(c) for c in companies] if i is not None]
    result = {'features': items}
    result.update({'type':'FeatureCollection',
                   '_COMMENT_': '*** DO NOT EDIT THIS FILE, IT IS AUTOMATICALLY GENERATED BY A SCRIPT ***'})
    return result

def to_geojson(company):
    required = ['name', 'address']
    missing = [k not in company for k in required]
    if any(missing):
        return None
    geo = {'type':'Point',
           'coordinates': get_lnglat(company)}
    properties = {'marker-symbol':'marker-stroked',
                  'name': company['name'],
                  'address': company['address']
                  }
    if 'url' in company:
        properties['url'] = company['url']
    return {'type':'Feature',
              'geometry': geo,
              'properties': properties
            }

# returns [longitude, latitude] of company
# Uses public Google API, see http://geocoder.readthedocs.org/en/latest/providers/Google/
# Can also use Bing if you wish.

def get_lnglat(company):
    g = geocoder.google(company['address'])
    if not g.ok:
        raise Exception('%s while geocoding %s at address:"%s"' % (g.error, company['name'], company['address']))
    (lat, lng) = g.latlng
    return (lng, lat)

if __name__ == '__main__':
    main()
